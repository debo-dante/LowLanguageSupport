#!/usr/bin/env python3
"""
Kannada NLP Demonstration Script

A simple script to showcase Kannada language processing capabilities
using our specialized framework.
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

import pandas as pd
from preprocessing.kannada_preprocessor import KannadaPreprocessor
from data_collection.kannada_collector import KannadaDataCollector
from models import IndianLanguageModel


def main():
    """Main demonstration function."""
    
    print("üî§ ‡≤ï‡≤®‡≥ç‡≤®‡≤° NLP ‡≤™‡≥ç‡≤∞‡≤¶‡≤∞‡≥ç‡≤∂‡≤® (Kannada NLP Demonstration)")
    print("=" * 60)
    
    # Initialize Kannada preprocessor
    print("\n1. üßπ ‡≤™‡≥ç‡≤∞‡≥Ä-‡≤™‡≥ç‡≤∞‡≥ä‡≤∏‡≥Ü‡≤∏‡≤∞‡≥ç ‡≤Ü‡≤∞‡≤Ç‡≤≠ (Initializing Preprocessor)...")
    preprocessor = KannadaPreprocessor()
    
    # Sample Kannada texts for demonstration
    sample_texts = [
        "‡≤ï‡≤®‡≥ç‡≤®‡≤° ‡≤≠‡≤æ‡≤∑‡≥Ü‡≤Ø‡≥Å ‡≤¶‡≥ç‡≤∞‡≤æ‡≤µ‡≤ø‡≤° ‡≤≠‡≤æ‡≤∑‡≤æ ‡≤ï‡≥Å‡≤ü‡≥Å‡≤Ç‡≤¨‡≤¶ ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤∏‡≥Å‡≤Ç‡≤¶‡≤∞ ‡≤≠‡≤æ‡≤∑‡≥Ü‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.",
        "‡≤¨‡≥Ü‡≤Ç‡≤ó‡≤≥‡≥Ç‡≤∞‡≥Å ‡≤≠‡≤æ‡≤∞‡≤§‡≤¶ ‡≤∏‡≤ø‡≤≤‡≤ø‡≤ï‡≤®‡≥ç ‡≤µ‡≥ç‡≤Ø‡≤æ‡≤≤‡≤ø ‡≤é‡≤Ç‡≤¶‡≥Å ‡≤ï‡≤∞‡≥Ü‡≤Ø‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.",
        "‡≤ï‡≥É‡≤§‡≥ç‡≤∞‡≤ø‡≤Æ ‡≤¨‡≥Å‡≤¶‡≥ç‡≤ß‡≤ø‡≤Æ‡≤§‡≥ç‡≤§‡≥Ü ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ø‡≤Ç‡≤§‡≥ç‡≤∞ ‡≤ï‡≤≤‡≤ø‡≤ï‡≥Ü ‡≤≠‡≤µ‡≤ø‡≤∑‡≥ç‡≤Ø‡≤¶ ‡≤§‡≤Ç‡≤§‡≥ç‡≤∞‡≤ú‡≥ç‡≤û‡≤æ‡≤®‡≤ó‡≤≥‡≥Å.",
        "‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤∏‡≤Ç‡≤∏‡≥ç‡≤ï‡≥É‡≤§‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤™‡≤∞‡≤Ç‡≤™‡≤∞‡≥Ü ‡≤¨‡≤π‡≤≥ ‡≤∂‡≥ç‡≤∞‡≥Ä‡≤Æ‡≤Ç‡≤§‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü."
    ]
    
    print(f"üìù ‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø ‡≤™‡≤æ‡≤†‡≥ç‡≤Ø‡≤ó‡≤≥‡≥Å (Sample Texts): {len(sample_texts)} texts")
    
    # Demonstrate text processing
    print("\n2. üî§ ‡≤™‡≤æ‡≤†‡≥ç‡≤Ø ‡≤™‡≥ç‡≤∞‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø‡≥Ü (Text Processing)...")
    processed_texts = []
    
    for i, text in enumerate(sample_texts, 1):
        print(f"\n   üìÑ Text {i}:")
        print(f"   Original: {text}")
        
        # Clean text
        cleaned = preprocessor.clean_kannada_text(text)
        processed_texts.append(cleaned)
        print(f"   Cleaned:  {cleaned}")
        
        # Get statistics
        stats = preprocessor.get_kannada_text_statistics(text)
        print(f"   Stats: {stats['kannada_characters']} Kannada chars, "
              f"{stats['word_count']} words")
        
        # Tokenize
        tokens = preprocessor.tokenize_kannada_words(text)
        print(f"   Tokens: {tokens[:5]}...")  # Show first 5 tokens
    
    # Initialize model
    print(f"\n3. ü§ñ ‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø ‡≤Ü‡≤∞‡≤Ç‡≤≠ (Model Initialization)...")
    try:
        model = IndianLanguageModel(
            language='kn',
            model_type='bert',
            vocab_size=32000,
            hidden_size=768,
            num_hidden_layers=6,  # Smaller for demo
            num_attention_heads=12,
            max_position_embeddings=1024
        )
        
        print("‚úÖ Model initialized successfully!")
        
        # Get model parameters info
        param_count = model.get_parameter_count()
        print(f"   Total parameters: {param_count['total']:,}")
        
        # Test embeddings
        print(f"\n4. üß† ‡≤é‡≤Ç‡≤¨‡≥Ü‡≤°‡≤ø‡≤Ç‡≤ó‡≥ç ‡≤™‡≤∞‡≥Ä‡≤ï‡≥ç‡≤∑‡≥Ü (Embedding Test)...")
        embeddings = model.get_embeddings(sample_texts[:2], language='kn')
        print(f"   Generated embeddings shape: {embeddings.shape}")
        print(f"   Sample embedding (first 3 dims): {embeddings[0][:3].numpy()}")
        
    except Exception as e:
        print(f"‚ùå Model initialization failed: {e}")
        print("   This is normal without proper dependencies installed.")
    
    # Initialize data collector
    print(f"\n5. üìä ‡≤¶‡≤§‡≥ç‡≤§ ‡≤∏‡≤Ç‡≤ó‡≥ç‡≤∞‡≤æ‡≤π‡≤ï (Data Collector)...")
    try:
        collector = KannadaDataCollector()
        
        # Create sample dataset
        sample_data = []
        for i, text in enumerate(processed_texts):
            sample_data.append({
                'title': f'‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø ‡≤≤‡≥á‡≤ñ‡≤® {i+1}',
                'content': text,
                'source': '‡≤™‡≥ç‡≤∞‡≤¶‡≤∞‡≥ç‡≤∂‡≤®',
                'category': 'sample',
                'language': 'kn'
            })
        
        df = pd.DataFrame(sample_data)
        df['timestamp'] = pd.Timestamp.now()
        df['text_length'] = df['content'].str.len()
        df['word_count'] = df['content'].str.split().str.len()
        
        print(f"   Created sample dataset: {len(df)} items")
        print(f"   Average text length: {df['text_length'].mean():.0f} characters")
        
        # Show statistics
        stats = collector.get_collection_statistics(df)
        print(f"   Total words: {stats.get('total_words', 0)}")
        
    except Exception as e:
        print(f"‚ùå Data collector error: {e}")
    
    print(f"\nüéâ ‡≤™‡≥ç‡≤∞‡≤¶‡≤∞‡≥ç‡≤∂‡≤® ‡≤™‡≥Ç‡≤∞‡≥ç‡≤£! (Demonstration Complete!)")
    print("=" * 60)
    print("‚ú® Kannada NLP framework is ready for advanced language processing!")
    print("üîç Explore the notebooks for detailed workflows.")
    print("üìö Check the configs/ directory for Kannada-specific settings.")
    print("üöÄ Start building amazing Kannada NLP applications!")


if __name__ == "__main__":
    main()